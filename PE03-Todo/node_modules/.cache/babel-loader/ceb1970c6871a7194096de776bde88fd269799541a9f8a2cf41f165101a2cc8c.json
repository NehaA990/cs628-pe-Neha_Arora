{"ast":null,"code":"var _jsxFileName = \"/Users/nehaarora/Documents/Q5/Full Stack dev/PE/PE03-Todo/todo-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TodoList from './TodoList'; // Import TodoList component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]); // State to store tasks\n  const [newTask, setNewTask] = useState(''); // State to store the new task\n\n  // Function to handle adding new task\n  const handleAddTask = () => {\n    if (newTask.trim() !== '') {\n      // Prevent adding empty tasks\n      setTasks([...tasks, newTask]); // Add new task to the list\n      setNewTask(''); // Clear the input field\n    }\n  };\n\n  // Function to handle deleting a task\n  const handleDeleteTask = taskToDelete => {\n    setTasks(tasks.filter(task => task !== taskToDelete)); // Filter out the task to be deleted\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value) // Update newTask state\n      ,\n      placeholder: \"Enter new task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(TodoList, {\n      tasks: tasks,\n      onDeleteTask: handleDeleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MMRu7H+sKP7rEuK8M8zT6HaT89w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TodoList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTask","setNewTask","handleAddTask","trim","handleDeleteTask","taskToDelete","filter","task","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","onDeleteTask","_c","$RefreshReg$"],"sources":["/Users/nehaarora/Documents/Q5/Full Stack dev/PE/PE03-Todo/todo-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TodoList from './TodoList';  // Import TodoList component\n\nfunction App() {\n  const [tasks, setTasks] = useState([]); // State to store tasks\n  const [newTask, setNewTask] = useState(''); // State to store the new task\n\n  // Function to handle adding new task\n  const handleAddTask = () => {\n    if (newTask.trim() !== '') { // Prevent adding empty tasks\n      setTasks([...tasks, newTask]); // Add new task to the list\n      setNewTask(''); // Clear the input field\n    }\n  };\n\n  // Function to handle deleting a task\n  const handleDeleteTask = (taskToDelete) => {\n    setTasks(tasks.filter((task) => task !== taskToDelete)); // Filter out the task to be deleted\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>ToDo List</h1>\n      \n      {/* Input field for adding a new task */}\n      <input\n        type=\"text\"\n        value={newTask}\n        onChange={(e) => setNewTask(e.target.value)} // Update newTask state\n        placeholder=\"Enter new task\"\n      />\n      <button onClick={handleAddTask}>Add Task</button> {/* Button to add task */}\n\n      {/* Render the TodoList component, passing tasks and delete handler */}\n      <TodoList tasks={tasks} onDeleteTask={handleDeleteTask} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAMU,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIF,OAAO,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAAE;MAC3BJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAC;MAC/BC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB;EACF,CAAC;;EAED;EACA,MAAMG,gBAAgB,GAAIC,YAAY,IAAK;IACzCN,QAAQ,CAACD,KAAK,CAACQ,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAKF,YAAY,CAAC,CAAC,CAAC,CAAC;EAC3D,CAAC;EAED,oBACEV,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBd,OAAA;MAAAc,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGlBlB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEf,OAAQ;MACfgB,QAAQ,EAAGC,CAAC,IAAKhB,UAAU,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAC;MAAA;MAC7CI,WAAW,EAAC;IAAgB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFlB,OAAA;MAAQyB,OAAO,EAAElB,aAAc;MAAAO,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC,eAGlDlB,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEA,KAAM;MAACuB,YAAY,EAAEjB;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV;AAAChB,EAAA,CAlCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}